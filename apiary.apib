FORMAT: 1A
HOST: https://api.internet.com/

# ASAP Reseller API
The ASAP Reseller API is a *registrar platform* offering for the Afilias ASAP reseller service.

# Group Token
General token authentication and handling.

## Token Generation [/v1/auth/token]
### Request new JWT token [POST]
+ Request
    
        { "reseller_id": "r_35gegsdfsdfbgbr", "email": "bob@example.com", "password": "secret1" }
        
+ Response 201 (application/json)

        {  
                "data": {
                        "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E", 
                        "id": "u_asfvlsajdfoasjf" 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Login failed"
                }
        }
        
## Token Refresh [/v1/auth/token/refresh]
### Update JWT token to avoid expiration [PUT]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 201 (application/json)

        {  
                "data": {
                        "token": "abJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd44" 
                }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }
        }

## Token Invalidation [/v1/auth/token/revoke]
### Force JWT token expiration [DELETE]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204

# Group Users
## User Retrieval [/v1/users/{user_id}]

+ Parameters
    + user_id (required, string, `u_345f4h2b`) ... User ID to retrieve.
    
### Retrieve a user [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": [{
                          "id": "u_345f4h2b", "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
                }, {
                          "id": "u_345f4h2b", "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
                }]
        }
        
## User Creation [/v1/users]
### Create a new user [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            { "reseller_id": "r_35gegsdfsr", "email": "bob@example.com", "password": "secret1", "first_name": "Bob", "last_name": "Smith" }
        
+ Response 201 (application/json)

        {  
                "data": {
                        "id": "u_345f4h2b" 
                }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Operation failed"
                }
        }
        
### List direct reseller admin users and customer users [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 201 (application/json)

        {  
                "data": [{
                          "id": "u_145f4h2b", "first_name": "Alice", ...
                }, {
                          "id": "u_94gh4627", "first_name": "Bob", ...
                }]
        }
        
## User Management [/v1/users/{id}]
+ Parameters
    + id (required, integer, `24`) ... User record id.

### Retrieve specific user [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": {
                        "id": "u_145f4h2b", "first_name": "Adam", "last_name", "Jones", "email": "ajones@yahoo.com", ... 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

### Update user record [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "user_id": 50, "first_name", "Sam", "last_name": "Spade", "email": "bob@example.com", ... }
        
+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

# Group Passwords
Password handling and reset.

## Change Request [/v1/password/forgot]
### Forgotten password email request [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            { "user_id": "u_345f4h2b" }
        
+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Change Request [/v1/password/forgot/{verification_id}]
### Change email request [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            { "user_id": "u_345f4h2b", "verification_token": "agerffsfv4g3qgqh" }
        
+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

# Group Verification
New user verification of the **ASAP API**

## Verify New User [/v1/verification/{verification_key}]
### Complete new user creation [GET]

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Verification code not found"
                }
        }

# Group Resellers
Reseller related resources of the **ASAP API**

## List sub-resellers [/v1/resellers]
### List all direct sub-resellers [GET]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "r_dfb3gwfsdfefw", "name": "Web.com", ...
                }, {
                          "id": "r_awrfedbe43tbe", "name": "1&1", ...
                }]
        }

## Specific reseller [/v1/resellers/{reseller_id}]
### Retrieve reseller record [GET]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "id": "r_zxfvebererfdfbdfv" 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Reseller not found"
                }
        }

### Update reseller record [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "name": "2&2", ... }
        
+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Reseller not found"
                }
        }

# Group Products
Product related resources of the **ASAP API**

## Product List [/v1/products]
### List all products [GET]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                          "id": "p_asfar34t4f2f", "name": "TLD", ...
                }, {
                          "id": "p_adtrgt55353q", "name": "goMobi", ...
                }]
        }

## Bundles List [/v1/products/bundles]
### List  offers [GET]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                          "id": "b_asffreb4432", "title": "Bundle #1", ...
                }, {
                          "id": "b_a34t3gb2668", "title": "Bundle #2", ...
                }]
        }

## Retrieve specific upsells [/v1/products/{pid}/upsells]
### Retrieve upsells record [GET]
+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "id": "r_zxfvebererfdfbdfv" 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Product not found"
                }
        }

### Update product upsell record [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "name": "2&2", ... }
        
+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Product not found"
                }
        }

# Group TLDs
## TLD List [/v1/domains/tlds]
### List all available TLDs [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": 1, "tld": "organic", ...
                }, {
                        "id": 2, "tld": "info", ...
                }]
        }

## TLD Categories [/v1/domains/tlds/categories]
### List all TLD categories [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": 1, "category": "business", ...
                }, {
                        "id": 2, "category": "industry", ...
                }, {
                        "id": 3, "category": "personal", ...
                }]
        }

# Group Cart
Customer cart related resources of the **ASAP API**

## Manage Cart [/v1/users/{user_id}/cart/items]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.
    
### Retrieve a user's cart [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "i_45g3rsdfsdfsq", "name": "goMobi", "value": "", ...
                }, {
                        "id": "i_asv5t3ggsdwfd", "name": ".Organic Domain", "value": "wholefoods" ...
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

### Add to user's cart [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "i_45g3rsdfsdfsq", "name": "goMobi", "value": "", ... }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Manage Cart Items [/v1/users/{user_id}/cart/items/{item_id}]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.
    + item_id (required, string, `i_asdf34fwrfgb`) ... Cart item id.

### Remove item from user's cart [DELETE]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "i_45g3rsdfsdfsq" }

+ Response 204

### Update item in user's cart [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "i_45g3rsdfsdfsq", "name": "goMobi", "value": "", ... }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Reserving Domains [/v1/users/{user_id}/cart/items/{item_id}/reserve]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.
    + item_id (required, string, `i_asdf34fwrfgb`) ... Cart item id.

### Reserve a domain name [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Cart Checkout [/v1/users/{user_id}/cart/checkout]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.

### Submit order and get order id [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "order_id": "o_fvdfb3gervsf2es" 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Cart Complete [/v1/users/{user_id}/cart/complete]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.

### Send payment reference and finalize purchase [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "payment_id": "bluesnap_12345" 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

# Group Wishlist
Wishlist related resources of the **ASAP API**

## Wistlist Management [/users/{user_id}/wishlist]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.

### Retrieve wishlist [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "i_45g3rsdfsdfsq", "name": "goMobi", "value": "", ...
                }, {
                        "id": "i_asv5t3ggsdwfd", "name": ".Organic Domain", "value": "wholefoods" ...
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

### Add to wishlist [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "p_45g3rsdfsdfsq", "name": "goMobi", "value": "", ... }
            
+ Response 200 (application/json)

          {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

### Delete entire wishlist [DELETE]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 204

## Manage wishlist items [/v1/users/{user_id}/wishlist/{wish_id}]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.

### Update wishlist item [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "p_45g3rsdfsdfsq", "name": "goMobi", "value": "", ... }
            
+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

### Delete wishlist item [DELETE]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 204

# Group Orders
Orders related resources of the **ASAP API**

## List user's orders [/v1/users/{user_id}/orders]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.

### Retrieve list of user orders [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "o_45g3rsdfsdfsq", "created": "2014-01-16 12:04:33", ...
                }, {
                        "id": "o_asv5t3ggsdwfd", "created": "2014-02-27 10:30:18", ...
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## List specific order [/v1/users/{user_id}/orders/{order_id}]
+ Parameters
    + user_id (required, string, `u_5g3gefwefwef`) ... User id.
    + order_id (required, string, `o_ssdf34wfgfgd`) ... ORder id.

### Retrieve a user order [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "id": "o_45g3rsdfsdfsq", "created": "2014-01-16 12:04:33", ... 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

# Group Domains
Domain related resources of the **ASAP API**

## Check Availability [/v1/domain/{domain}/available]
+ Parameters
    + domain (required, string, `myshop.info`) ... Name of domain to check availability for.

### Check availability of specific domain [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "available": 1 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Suggest [/v1/domain-search/{query}]
Perform a domain name suggestions search: Recommended, Most popular

+ Parameters
    + query (required, string, `myshop`) ... String of the base name to spin domains for. 

### Retrieve list of domain suggestions [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "suggestions": [ "myshop.info", "myshophome.info", "myshopweb.organic" ]
                }
        }

## Suggest [/v1/domain-search/{query}/bulk]
Perform a bulk domain name suggestions search

+ Parameters
    + query (required, string, `myshop.info, myshophome.info, myshopweb.organic`) ... String of the base name to spin domains for. 

### Bulk domain search [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "suggestions": [ "myshop.info", "myshophome.info", "myshopweb.organic" ]
                }
        }

## Suggest [/v1/domain/{query}/tld-spin]
Perform a domain name suggestions search: Recommended, Most popular

+ Parameters
    + query (required, string, `myshop`) ... String of the base name to spin domains for. 

### Retrieve list of domain suggestions [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "suggestions": [ "myshop.info", "myshophome.info", "myshopweb.organic" ]
                }
        }

## Suggest [/v1/domain/{query}/domain-spin] 
Perform a domain name suggestions search, ("domain spinning") : Related

+ Parameters
    + query (required, string, `myshop`) ... String of the base name to spin domains for. 

### Retrieve list of domain suggestions [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "suggestions": [ "myshop.info", "myshophome.info", "myshopweb.organic" ]
                }
        }

## List My Domains [/v1/domain/list{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.

### Retrieve list of my domains [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": {
                        "suggestions": [ "myshop.info", "myshophome.info", "myshopweb.organic" ]
                }
        }
        
## Domain creation [/v1/domain/{domain}{?query}]
### Domain Creation & Update [POST]
Create a new domain name order - Asynchronous
+ Parameters
    + query (optional, string, `create`) ... register domain.
    
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            {
            "domain": "myshop.info",
            "years": 2,
            "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...],
                "contact": [
                    {
                        "type": "registrant",
                        "first_name": "Jonathan",
                        "last_name": "Doe",
                        "organization": "Acme Inc",
                        "email": "",
                        "address1": "",
                        "address2": "",
                        "city": "",
                        "state": "",
                        "postal_code": "",
                        "country": "",
                        "phone1_type": "",
                        "phone1_country_code": "",
                        "phone1_number": "",
                        "phone1_extension": "",
                        "phone2_type": "",
                        "phone2_country_code": "",
                        "phone2_number": "",
                        "phone2_extension": "",
                        "fax1_type": "",
                        "fax1_country_code": "",
                        "fax1_number": ""
                    }
                ]
            }

+ Response 202 (application/json)

        {  
                "data": {
                        "status":"Accepted", "location": "/v1/query_status/{reference}" 
                }
        }

## Domain info [/v1/domain/{domain}]
Retrieve domain details

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Retrieve full domain info, contacts, DNS records, nameservers, domain lock [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "domain": "myshop.info", ... 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }


## Query status [/v1/query_status/{reference_id}]
Retrieve current details

+ Parameters
    + reference_id (required, string, `TRXPROC-1234`) ... Reference id to get the status of the process.

### Querying the current status of the process [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "reference": "TRXPROC-1234", 
                        "message": "Problem in processing", 
                        "errors": {
                            "code":121, 
                            "message": "Card expired"
                        }
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Process not found"
                }
        }

## Send email [/v1/user/{email_id}{?action}]
Request to send activation email - Asynchronous

+ Parameters
    + email_id (required, string, `thomsan@afilias.com`) ... mail id of the user.
    + action (optional, string, `resend/activation`) ... Will re-send/activation mail to the user.

### Querying the current status of the process [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "email": thomsan@afilias.com, "message": "Success"
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "User not found"
                }
        }

## Search [/v1/domain-search/{domain_name}]
Domain search

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Performs domain search [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": { 
                        "domain": "myshop.info", ... 
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Domain lock [/v1/domain/{domain}/lock]
Set domain lock status

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Set current status of domain lock [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "lock": "on" }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Domain Auto renew [/v1/domain/{domain}/auto-renew]
### Set/Get auto renew domain status

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Set current status of auto renew [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

                { "auto_renew": "on" }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

### Set current status of auto renew [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "auto_renew": "on" }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Domain Auto renew [/v1/domain/{domain}/who-is-privacy]
### Set/Get 'who is privacy' status

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Set current status of whoisprivacy [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "whoisprivacy": "on" }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

### Set current status of whoisprivacy [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

   + Body

            { "whoisprivacy": "on" }

+ Response 200 (application/json)

        {  
                "data": { }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Nameservers [/v1/domain/{domain}/nameservers]
Update domain nameservers

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Update domain nameserver records [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...]
            }
            
+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Domain Contact Creation [/v1/domain/{domain}/contacts]
+ Parameters
    + domain (required, string, `myshop.info`) ... Domain name of new contact.

### Add domain contact records [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "contact": [
                    {
                        "type": "registrant",
                        "first_name": "Jonathan",
                        "last_name": "Doe",
                        "organization": "Acme Inc",
                        "email": "",
                        "address1": "",
                        "address2": "",
                        "city": "",
                        "state": "",
                        "postal_code": "",
                        "country": "",
                        "phone1_type": "",
                        "phone1_country_code": "",
                        "phone1_number": "",
                        "phone1_extension": "",
                        "phone2_type": "",
                        "phone2_country_code": "",
                        "phone2_number": "",
                        "phone2_extension": "",
                        "fax1_type": "",
                        "fax1_country_code": "",
                        "fax1_number": ""
                    }
                ]
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Domain Contacts Management [/v1/domain/{domain}/contacts/{id}]
Update domain contacts record

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.
    + id (required, integer, `42`) ... Domain contact record id.
    
### Delete domain contact [DELETE]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204 

### Update domain contact [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            {
                "id": "c_34ekjgk21f2g",
                "contact": [
                    {
                        "type": "registrant",
                        "first_name": "Jonathan",
                        "last_name": "Doe",
                        "organization": "Acme Inc",
                        "email": "",
                        "address1": "",
                        "address2": "",
                        "city": "",
                        "state": "",
                        "postal_code": "",
                        "country": "",
                        "phone1_type": "",
                        "phone1_country_code": "",
                        "phone1_number": "",
                        "phone1_extension": "",
                        "phone2_type": "",
                        "phone2_country_code": "",
                        "phone2_number": "",
                        "phone2_extension": "",
                        "fax1_type": "",
                        "fax1_country_code": "",
                        "fax1_number": ""
                    }
                ]
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

# Group URL Forwarding
URL forwarding related resources of the **ASAP API**

## Manage domain fowarding rules [/v1/domain/{domain}/forwarding]
+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name to list URL forwarding rules for.
    
### Retrieve list of URL forwarding rules [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "rules": [
                                {
                                        "id": "ru_34effrth45y4",
                                        "pointing": "http://www.myothershop.info",
                                        "type": "MASKED",
                                        "page_title": "Forwarding Page"
                                }
                        ]
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

### Create forwarding rule record [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "pointing": "http://www.myothershop.info",
                "type": "MASKED",
                "page_title": "Forwarding Page"
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Manage email fowarding [/v1/domain/{domain}/email]
+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name to list URL forwarding rules for.
    
### Retrieve list of URL forwarding rules [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "domain": "myshop.info",
                        "years": 2,
                        "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...],
                        "contact": [
                                {
                                        "type": "registrant",
                                        "first_name": "Jonathan",
                                        "last_name": "Doe",
                                        "organization": "Acme Inc",
                                        "email": "",
                                        "address1": "",
                                        "address2": "",
                                        "city": "",
                                        "state": "",
                                        "postal_code": "",
                                        "country": "",
                                        "phone1_type": "",
                                        "phone1_country_code": "",
                                        "phone1_number": "",
                                        "phone1_extension": "",
                                        "phone2_type": "",
                                        "phone2_country_code": "",
                                        "phone2_number": "",
                                        "phone2_extension": "",
                                        "fax1_type": "",
                                        "fax1_country_code": "",
                                        "fax1_number": ""
                                }
                        ]
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Manage forwarding rule record [/v1/domain/{domain}/forwarding/{id}]
+ Parameters
    + domain (required, string, `myshop`) ... String of the base name to manage forwarding for. 
    + id (required, integer, `90`) ... Forwarding rule record id. 

### Delete forwarding rule record [DELETE]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

### Update forwarding rule record [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "id": "ru_asdfer345345",
                "pointing": "http://www.myothershop.info",
                "type": "MASKED",
                "page_title": "Forwarding Page"
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

# Group DNS
DNS record related resources of the **ASAP API**

## List [/v1/domain/{domain}/dns]
+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name to list DNS records for.

### Retrieve list of DNS records [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "records": [
                                {
                                        "id": "d_fg3qg4535y",
                                        "type": "MX",
                                        "content": "mx1.myshop.info",
                                        "ttl": 300,
                                        "priority": 10
                                },
                                {
                                        "id": "d_3y4thr4t3h",
                                        "type": "MX",
                                        "content": "mx2.myshop.info",
                                        "ttl": 300,
                                        "priority": 20
                                }
                        ]
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

### Create new DNS record [POST]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "type": "MX",
                "content": "mx1.myshop.info",
                "ttl": 300,
                "priority": 10
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## Manage DNS record [/v1/domain/{domain}/dns/{id}]
+ Parameters
    + domain (required, string, `myshop.info`) ... Domain name to manage DNS records for.
    + id (required, string, `d_34ktjhgkhr`) ... Domain DNS record id. 

### Delete DNS record [DELETE]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }
    
### Update DNS record [PUT]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "type": "MX",
                "content": "mx1.myshop.info",
                "ttl": 300,
                "priority": 10
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

## For future - Domain  [/v1/domains/{query}{?params}{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + query (required, string, `jon`) ... Query string for user search.
    + params (optional, string, `jon`) ... Query string for user search.
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.
    
### Domains [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "x_wfefwef23r2", "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
                }, {
                        "id": "x_2rrffrg2r24", "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
                }]
        }

### Domains [POST]
Create a new domain name order
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            {
                    "domain": "myshop.info",
                    "years": 2,
                    "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...],
                        "contact": [{
                                        "type": "registrant",
                                        "first_name": "Jonathan",
                                        "last_name": "Doe",
                                        "organization": "Acme Inc",
                                        "email": "",
                                        "address1": "",
                                        "address2": "",
                                        "city": "",
                                        "state": "",
                                        "postal_code": "",
                                        "country": "",
                                        "phone1_type": "",
                                        "phone1_country_code": "",
                                        "phone1_number": "",
                                        "phone1_extension": "",
                                        "phone2_type": "",
                                        "phone2_country_code": "",
                                        "phone2_number": "",
                                        "phone2_extension": "",
                                        "fax1_type": "",
                                        "fax1_country_code": "",
                                        "fax1_number": ""
                        }]
            }

+ Response 201 (application/json)

        {  
                "data": { }
        }

## For future - Reseller  [/v1/resellers/{query}{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + query (required, string, `jon`) ... Query string for reseller id/name.
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.
    
### Reseller [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "r_3gfgsfsafh44", "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
                }, {
                        "id": "r_5l5lfj23ntd1", "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
                }]
        }
        
## For future - Product  [/v1/products/{query}{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + query (required, string, `jon`) ... Query string for product search.
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.
    
### Product [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "p_xcvbx4y434", "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
                }, {
                        "id": "p_cvbncsthfh", "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
                }]
        }
        
## For future - Bundles  [/v1/bundles/{query}{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + query (required, string, `jon`) ... Query string for user search.
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.
    
### Bundles [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "b_eysb454563", "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
                }, {
                        "id": "b_dffn6r7853", "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
                }]
        }
        
# Group Whois
Whois lookup service of the **ASAP API**

## List [/v1/whois/{domain}]
+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name to list whois info for.

### Retrieve list of whois info [GET]
+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "record": 
                                "Domain Name:AFILIAS.INFO
                                Domain ID: D217-LRMS
                                Creation Date: 2001-07-25T14:11:20Z
                                Updated Date: 2014-06-30T14:22:47Z
                                Registry Expiry Date: 2021-07-25T14:11:20Z
                                Sponsoring Registrar:Afilias Ltd. (R145-LRMS)
                                Sponsoring Registrar IANA ID: 700023
                                WHOIS Server: 
                                Referral URL: 
                                Domain Status: ok
                                Registrant ID:C270-LRMS
                                Registrant Name:Afilias Limited
                                Registrant Organization:Afilias Ltd.
                                Registrant Street: 2 La Touche House
                                Registrant Street: IFSC
                                Registrant City:Dublin
                                Registrant State/Province:
                                Registrant Postal Code:1
                                Registrant Country:IE
                                Registrant Phone:+353.18541100
                                Registrant Phone Ext: 
                                Registrant Fax: +1.2157065701
                                Registrant Fax Ext: 
                                Registrant Email:support@afilias.info
                                Admin ID:C270-LRMS
                                Admin Name:Afilias Limited
                                Admin Organization:Afilias Ltd.
                                Admin Street: 2 La Touche House
                                Admin Street: IFSC
                                Admin City:Dublin
                                Admin State/Province:
                                Admin Postal Code:1
                                Admin Country:IE
                                Admin Phone:+353.18541100
                                Admin Phone Ext: 
                                Admin Fax: +1.2157065701
                                Admin Fax Ext: 
                                Admin Email:support@afilias.info
                                Billing ID:C270-LRMS
                                Billing Name:Afilias Limited
                                Billing Organization:Afilias Ltd.
                                Billing Street: 2 La Touche House
                                Billing Street: IFSC
                                Billing City:Dublin
                                Billing State/Province:
                                Billing Postal Code:1
                                Billing Country:IE
                                Billing Phone:+353.18541100
                                Billing Phone Ext: 
                                Billing Fax: +1.2157065701
                                Billing Fax Ext: 
                                Billing Email:support@afilias.info
                                Tech ID:C270-LRMS
                                Tech Name:Afilias Limited
                                Tech Organization:Afilias Ltd.
                                Tech Street: 2 La Touche House
                                Tech Street: IFSC
                                Tech City:Dublin
                                Tech State/Province:
                                Tech Postal Code:1
                                Tech Country:IE
                                Tech Phone:+353.18541100
                                Tech Phone Ext: 
                                Tech Fax: +1.2157065701
                                Tech Fax Ext: 
                                Tech Email:support@afilias.info
                                Name Server:A0.DIG.AFILIAS-NST.INFO
                                Name Server:B0.DIG.AFILIAS-NST.INFO
                                Name Server:C0.DIG.AFILIAS-NST.INFO
                                Name Server:D0.DIG.AFILIAS-NST.INFO
                                DNSSEC:signedDelegation
                                DS Created 1:2013-12-09T21:29:30Z
                                DS Key Tag 1:32709
                                Algorithm 1:5
                                Digest Type 1:2
                                Digest 1:4B5D67729CE8180BBF93D0ACD78053262F68BCD402D0C947E54E74A553E5994A
                                DS Maximum Signature Life 1:1814400 seconds
                                DS Created 2:2013-12-09T21:29:30Z
                                DS Key Tag 2:32709
                                Algorithm 2:5
                                Digest Type 2:1
                                Digest 2:BF4903176E0BE0664B511BFEAA4651A5CACCC733
                                DS Maximum Signature Life 2:1814400 seconds"
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": {  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }
        
