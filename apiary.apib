FORMAT: 1A
HOST: https://api.internet.com/

# ASAP Reseller API
The ASAP Reseller API is a *registrar platform* offering for ASAP reseller website and services. 

# Group User
General user management and authentication handling

## User Token Authentication [/v1/user/token]
### Request new JWT token [GET]
+ Response 200 (application/json)

        { "success": 1, "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E" }
        
+ Response 400 (text/plain)

        IP banned.

### Update JWT token to avoid expiration [PUT]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        Token unknown or already expired. 

## User Search [/v1/user/{query}{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + query (required, string, `jon`) ... Query string for user search.
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.
    
### Retrieve a user [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        [{
          "id": 1, "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
        }, {
          "id": 2, "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
        }]
        
## User Creation [/v1/user]
### Create a new user [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            { "email": "bob@example.com", "password": "secret1" }
        
+ Response 201 (application/json)

        { "success": 1, "id": 23, ... }
        
+ Response 400 (text/plain)

        Body format invalid.
        
## User Management [/v1/user/{id}]
+ Parameters
    + id (required, integer, `24`) ... User record id.

### Retrieve a user [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        { "id": 1, "first_name": "Adam", "last_name", "Jones", "email": "ajones@yahoo.com", ... }

+ Response 400 (text/plain)

        User not found.

### Update user record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "user_id": 50, "first_name", "Sam", "last_name": "Spade", "email": "bob@example.com", ... }
        
+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        Body format invalid or user not found.

## User Login [/v1/login]
### Returning user login [POST]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
    + Body
    
            { "email": "bob@example.com", "password": "secret1" }
        
+ Response 201 (application/json)

        { "success": 1, "id": 23, ... }
        
+ Response 400 (text/plain)

        Body format invalid or login failed.

## User Logout [/v1/logout]
### Returning user logout [DELETE]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 204 (text/plain)

# Group Products
Product related resources of the **ASAP API**

## Product List [/v1/products]
### List all products [GET]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        [{
          "id": 1, "name": "TLD", ...
        }, {
          "id": 2, "name": "goMobi", ...
        }]

## Offers List [/v1/products/offers]
### List product offers [GET]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Bundle #1", ...
        }, {
          "id": 2, "title": "Bundle #2", ...
        }]

## TLD List [/v1/products/tlds]
### List all available TLDs [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        [{
          "id": 1, "tld": "organic", ...
        }, {
          "id": 2, "tld": "info", ...
        }]

## TLD Categories [/v1/products/tlds/categories]
### List all TLD categories [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        [{
          "id": 1, "category": "business", ...
        }, {
          "id": 2, "category": "industry", ...
        }, {
          "id": 3, "category": "personal", ...
        }]

# Group Customers
Customer related resources of the **ASAP API**

## Customer Search [/v1/customer/{query}{?limit}{?offset}{?sortby}{?order}]
### Retrieve a customer [GET]
+ Parameters
    + query (required, string, `jon`) ... Query string for user search.
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.

+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        [{
          "id": 1, "first_name": "Jonathon", "last_name": "Doe", "email": "jdoe@doe.com", ...
        }, {
          "id": 2, "first_name": "J. E.", "last_name": "Smith", "email": "jonesmith@gmail.com", ...
        }]

## Customer Creation [/v1/customer]
### Create a new customer [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "email": "bob@example.com", "password": "secret1" }
        
+ Response 201 (application/json)

        { "success": 1, "id": 23, ... }
        
+ Response 400 (text/plain)

        Body format invalid.
        
## Customer Management [/v1/customer/{id}]
+ Parameters
    + id (required, integer, `102`) ... Customer record id.
    
### Retrieve a customer [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
    
+ Response 200 (application/json)

        { "id": 11, "first_name": "Adam", "last_name", "Jones", "email": "ajones@yahoo.com", ... }

+ Response 400 (text/plain)

        Customer not found.

### Update customer record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            { "id": 13, "email": "bob@example.com", ... }
        
+ Response 201 (application/json)

        { "success": 1 }

+ Response 400 (text/plain)

        Body format invalid or unknown user.

# Group Domains
Domain related resources of the **ASAP API**

## Suggest [/domain/suggest/{query}]
Perform a domain name suggestions search, ("domain spinning")

+ Parameters
    + query (required, string, `myshop`) ... String of the base name to spin domains for. 

### Retrieve list of domain suggestions [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {
            "myshop.info", "myshophome.info", "myshopweb.organic", ...
        }

## List My Domains [/domain/list{?limit}{?offset}{?sortby}{?order}]

+ Parameters
    + limit (optional, integer, `10`) ... Limit result set (ie. only return X results).
    + offset (optional, integer, `10`) ... Offset result set (ie. return from result X).
    + sortby (optional, string, `name`) ... Sort result set by specific column.
    + order (optional, string, `asc`) ... Order result set either ASCending or DESCending.

### Retrieve list of my domains [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {
            "myshop.info", "myshophome.info", "myshopweb.organic", ...
        }
        
## Domain creation [/domain/create]
### Domain Creation [post]
Create a new domain name order
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
        {
            "domain": "myshop.info",
            "years": 2,
            "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...],
            "contacts": [
                {
                    "type": "registrant",
                    "first_name": "Jonathan",
                    "last_name": "Doe",
                    "organization": "Acme Inc",
                    "email": "",
                    "address1": "",
                    "address2": "",
                    "city": "",
                    "state": "",
                    "postal_code": "",
                    "country": "",
                    "phone1_type": "",
                    "phone1_country_code": "",
                    "phone1_number": "",
                    "phone1_extension": "",
                    "phone2_type": "",
                    "phone2_country_code": "",
                    "phone2_number": "",
                    "phone2_extension": "",
                    "fax1_type": "",
                    "fax1_country_code": "",
                    "fax1_number": ""
                }
            ]
        }

+ Response 201 (application/json)

        { "success": 1 }

+ Response 400 (text/plain)

        Body format invalid.

## Domain info [/domain/{domain}]
Retrieve domain details

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Retrieve full domain info, contacts, DNS records, nameservers, domain lock [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        { "domain": "myshop.info", ... }

+ Response 400 (text/plain)

        Unknown domain.

## Domain lock [/domain/{domain}/lock]
Set domain lock status

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Set current status of domain lock [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 201 (application/json)

        { "lock": "on" }

## Nameservers [/domain/{domain}/nameservers]
Update domain nameservers

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.

### Update domain nameserver records [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...]
            }
            
+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        Unknown domain.

## Domain Contact Creation [/v1/domain/{domain}/contacts]
+ Parameters
    + domain (required, string, `myshop.info`) ... Domain name of new contact.

### Add domain contact records [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "contact": [
                    {
                        "type": "registrant",
                        "first_name": "Jonathan",
                        "last_name": "Doe",
                        "organization": "Acme Inc",
                        "email": "",
                        "address1": "",
                        "address2": "",
                        "city": "",
                        "state": "",
                        "postal_code": "",
                        "country": "",
                        "phone1_type": "",
                        "phone1_country_code": "",
                        "phone1_number": "",
                        "phone1_extension": "",
                        "phone2_type": "",
                        "phone2_country_code": "",
                        "phone2_number": "",
                        "phone2_extension": "",
                        "fax1_type": "",
                        "fax1_country_code": "",
                        "fax1_number": ""
                    }
                ]
            }

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 

        The body format was invalid.

## Domain Contacts Management [/domain/{domain}/contacts/{id}]
Update domain contacts record

+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name.
    + id (required, integer, `42`) ... Domain contact record id.
    
### Delete domain contact [DELETE]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204 

### Update domain contact [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            {
                "contact_id": 35,
                "contact": [
                    {
                        "type": "registrant",
                        "first_name": "Jonathan",
                        "last_name": "Doe",
                        "organization": "Acme Inc",
                        "email": "",
                        "address1": "",
                        "address2": "",
                        "city": "",
                        "state": "",
                        "postal_code": "",
                        "country": "",
                        "phone1_type": "",
                        "phone1_country_code": "",
                        "phone1_number": "",
                        "phone1_extension": "",
                        "phone2_type": "",
                        "phone2_country_code": "",
                        "phone2_number": "",
                        "phone2_extension": "",
                        "fax1_type": "",
                        "fax1_country_code": "",
                        "fax1_number": ""
                    }
                ]
            }

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        The body format was invalid.

# Group URL Forwarding
URL forwarding related resources of the **ASAP API**

## List domain fowarding rules [/domain/{domain}/forwarding]
+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name to list URL forwarding rules for.
    
### Retrieve list of URL forwarding rules [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {
            "rules": [
                {
                    "rule_id": 56,
                    "pointing": "http://www.myothershop.info",
                    "type": "MASKED",
                    "page_title": "Forwarding Page"
                }
            ]
        }

+ Response 400 (text/plain)

        Unknown domain.

## Forwarding rule creation [/v1/domain/{domain}/forwarding]
+ Parameters
    + domain (required, string, `myshop.info`) ... Domain name to create forwarding rule for.

### Create forwarding rule record [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "pointing": "http://www.myothershop.info",
                "type": "MASKED",
                "page_title": "Forwarding Page"
            }

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        The body format was invalid.

## Manage forwarding rule records [/domain/{domain}/forwarding/{id}]
+ Parameters
    + domain (required, string, `myshop`) ... String of the base name to manage forwarding for. 
    + id (required, integer, `90`) ... Forwarding rule record id. 

### Delete forwarding rule record [DELETE]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204
    
### Update forwarding rule record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "rule_id": 56,
                "pointing": "http://www.myothershop.info",
                "type": "MASKED",
                "page_title": "Forwarding Page"
            }

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        The body format was invalid.

# Group DNS
DNS record related resources of the **ASAP API**

## List [/domain/{domain}/dns]
+ Parameters
    + domain (required, string, `myshop.info`) ... String of the domain name to list DNS records for.

### Retrieve list of DNS records [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {
            "records": [
                {
                    "record_id": 32,
                    "type": "MX",
                    "content": "mx1.myshop.info",
                    "ttl": 300,
                    "priority": 10
                },
                {
                    "record_id": 33,
                    "type": "MX",
                    "content": "mx2.myshop.info",
                    "ttl": 300,
                    "priority": 20
                }
            ]
        }

+ Response 400 (text/plain)

        Unknown domain.

### Create new DNS record [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "type": "MX",
                "content": "mx1.myshop.info",
                "ttl": 300,
                "priority": 10
            }

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        The body format was invalid.

## Manage DNS record [/domain/{domain}/dns/{id}]
+ Parameters
    + domain (required, string, `myshop.info`) ... Domain name to manage DNS records for.
    + id (required, integer, `90`) ... Domain DNS record id. 

### Delete DNS record [DELETE]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204
    
### Update DNS record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "type": "MX",
                "content": "mx1.myshop.info",
                "ttl": 300,
                "priority": 10
            }

+ Response 201 (application/json)

        { "success": 1 }
        
+ Response 400 (text/plain)

        The body format was invalid.

# Group Wishlist
Managing items in the users wishlist
## Wishlist [/v1/wishlist]
### Retrieve the user's wishlist [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

            [{
              "id": 1, "title": "Product #1", "total", 25.49
            }, {
              "id": 2, "title": "Product #2", "total", 19.99
            }]
        

### Update a wishlist [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            [{
              "id": 1, "title": "Product #1", "total", 25.49
            }, {
              "id": 2, "title": "Product #2", "total", 19.99
            }]
        
+ Response 201 (application/json)

        { "success": 1 }
        
### Create a new wishlist [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "title": "Bundle #1 " }
        
+ Response 201 (application/json)

        { "success": 1, "id": 23 }
        
# Group Bundles [/v1/bundles/]
## Bundle [/v1/bundles/{id}]
Bundle related resources available via the reseller API
### Retrieve a bundle [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

            [{
              "id": 1, "title": "Bundle #1", ...
            }, {
              "id": 2, "title": "Bundle #2", ...
            }]
        

### Update a bundle [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "title": "Bundle #2", ... }
        
+ Response 201 (application/json)

        { "success": 1 }
        
        
