FORMAT: 1A
HOST: http://www.google.com

# ASAP Reseller API
The ASAP Reseller API is a *registrar platform* offering for ASAP reseller website and services. 

# Group Authorization
General authorization handling

## User Token Authentication [/v1/token]
### Request new JWT token [GET]
+ Response 200 (application/json)

        { 
        "success": 1,
        "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E"
        }

### Update JWT token to avoid expiration [PUT]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        { 
        "success": 1
        }

## User Login [/v1/login]
### Returning user login [POST]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Request (application/json)

        { "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

## User Logout [/v1/logout]
### Returning user logout [GET]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        { "success": 1 }

# Group Products
Product related resources of the **ASAP API**

## Product List [/v1/products]
### List all products [GET]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        [{
          "id": 1, "name": "TLD", ...
        }, {
          "id": 2, "name": "goMobi", ...
        }]

## Offers List [/v1/offers]
### List product offers [GET]
+ Request
    + Headers

            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Bundle #1", ...
        }, {
          "id": 2, "title": "Bundle #2", ...
        }]


# Group Customers
Customer related resources of the **ASAP API**

## Customers [/v1/customers{?id}{?email}]
Creating and managing customer objects

### Retrieve a customer [GET]
+ Parameters
    
    + id (optional, int) ... ID of the required customer.
    + email (optional, string) ... Email address of the required customer.

+ Request
    + Headers
    
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
    
+ Response 200 (application/json)

        { "id": 1, ... }

### Create a new customer [POST]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

### Update customer record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "email": "bob@example.com", ... }
        
+ Response 200 (application/json)

        { "success": 1 }

# Group TLDs
TLD related resources of the **ASAP API**

## TLD List [/v1/tlds]
### List all available TLDs [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        [{
          "id": 1, "category": "organic", ...
        }, {
          "id": 2, "category": "info", ...
        }]
     
## TLD Categories [/v1/tld_categories]
### List all available TLD categories [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        [{
          "id": 1, "tld": "Business", ...
        }, {
          "id": 2, "tld": "Education", ...
        }]


# Group Users
User related resources of the **ASAP API**

## User [/v1/users]
Creating and managing user objects

### Retrieve a user [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "email": "bob@example.com" }
        
+ Response 200 (application/json)

        { "id": 1, ... }
            
### Create a new user [POST]
+ Request (application/json)

        { "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

### Update user record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "email": "bob@example.com", ... }
        
+ Response 200 (application/json)

        { "success": 1 }


# Group Domains
Domain related resources of the **ASAP API**

## Search [/v1/domain/search/{query}]
Perform a domain name search, ("domain spinning")

+ Parameters
    + query (required, string, `myshop.info`) ... String `query` of the base name to spin domains for. 

### Retrieve list of suggestions [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        { ... }

## Domain creation [/v1/domain/create/{fqdn}]

## Domain info [/v1/domain/{fqdn}]
Retrieve and manage domain details using FQDN

+ Parameters
    + fqdn (required, string, `myshop.info`) ... String `fqdn` of the fully qualified domain name.

### Retrieve domain info, contacts, DNS records, nameservers [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        { "success": 1 }

### Update domain contact records [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "fqdn": "myshop.info", ... }
        
+ Response 200 (application/json)

        { "success": 1 }
        
## Retrieve Whois information [/v1/domain/{fqdn}/whois]
Retrieve whois information by fully qualified domain name
### Retrieve whois information [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)
        [{
            "Registry Domain ID","3245400_DOMAIN_COM-VRSN",
            "Registrar WHOIS Server","whois.enom.com",
            "Registrar URL","www.enom.com",
            "Updated Date","2014-08-08 04:07:32Z",
            "Creation Date","1997-05-07 04:00:00Z",
            "Registrar Registration Expiration Date","2019-05-08 04:00:00Z",
            "Registrar","ENOM, INC.",
            "Registrar IANA ID","48",
            "Registrar Abuse Contact Email","abuse@enom.com",
            "Registrar Abuse Contact Phone","+1.4252744500",
            "Domain Status","clientTransferProhibited",
            "Registrant Name","WHOIS AGENT",
            "Registrant Organization","WHOIS PRIVACY PROTECTION SERVICE, INC.",
            "Registrant Street","PO BOX 639",
            "Registrant Street","C/O INTERNET.COM",
            "Registrant City","KIRKLAND",
            "Registrant State/Province","WA",
            "Registrant Postal Code","98083",
            "Registrant Country","US",
            "Registrant Phone","+1.4252740657",
            "Registrant Fax","+1.4259744730",
            "Registrant Email","MWJWPKKY@WHOISPRIVACYPROTECT.COM",
            "Admin Name","WHOIS AGENT",
            "Admin Organization","WHOIS PRIVACY PROTECTION SERVICE, INC.",
            "Admin Street","PO BOX 639",
            "Admin Street","C/O INTERNET.COM",
            "Admin City","KIRKLAND",
            "Admin State/Province","WA",
            "Admin Postal Code","98083",
            "Admin Country","US",
            "Admin Phone","+1.4252740657",
            "Admin Fax","+1.4259744730",
            "Admin Email","MWJWPKKY@WHOISPRIVACYPROTECT.COM",
            "Tech Name","WHOIS AGENT",
            "Tech Organization","WHOIS PRIVACY PROTECTION SERVICE, INC.",
            "Tech Street","PO BOX 639",
            "Tech Street","C/O INTERNET.COM",
            "Tech City","KIRKLAND",
            "Tech State/Province","WA",
            "Tech Postal Code","98083",
            "Tech Country","US",
            "Tech Phone","+1.4252740657",
            "Tech Fax","+1.4259744730",
            "Tech Email","MWJWPKKY@WHOISPRIVACYPROTECT.COM",
            "Name Server","NS5.SWIFTPOST.NET",
            "Name Server","NS6.SWIFTPOST.NET",
            "DNSSEC","unSigned",
            "URL of the ICANN WHOIS Data Problem Reporting System","http://wdprs.internic.net/",
            "Last update of WHOIS database","2014-08-08 04:07:32Z"
        }]

## Retrieve Whois information [/v1/domain/{fqdn}/urlforwards]
Retrieve URL forwards for a specified domain
### Retrieve URL forwards [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)
        [{
            "source","www.internet.com",
            "destination","example.com"
        }]

### Create a URL forward [PUT]
+ Request (application/json)

        { "source": "www.internet.com", "destination": "example.com" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 1, ... }

### Update URL forwards [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "id": 1, "source": "www.internet.com", "destination","example2.com" }
        
+ Response 200 (application/json)

        { "success": 1 }

# Group Domains
User related resources of the **ASAP API**

## Domain [/v1/domains/{fqdn}]
Creating and managing domain objects

### Retrieve a domain [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "fqd": "bob@example.com" }
        
+ Response 200 (application/json)

        { "id": 1, ... }
            
### Create a new user [POST]
+ Request (application/json)

        { "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

### Update user record [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "email": "bob@example.com", ... }
        
+ Response 200 (application/json)

        { "success": 1 }
        


# Group Bundles [/v1/bundles/]
## Bundle [/v1/bundles/{id}]
Bundle related resources available via the reseller API
### Retrieve a bundle [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        [{
          "id": 1, "title": "Bundle #1", ...
        }, {
          "id": 2, "title": "Bundle #2", ...
        }]
        
+ Response 200 (application/json)

        { "id": 1, ... }
        

### Update a bundle [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        { "title": "Bundle #2" }
        
+ Response 200 (application/json)

        { "success": 1 }
        
## Bundle [/v1/bundles]
### Create a new bundle [POST]
+ Request (application/json)

        { "title": "Bundle #1 " }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23 }
        

# Group Wishlist
Managing items in the users wishlist
## Wishlist [/v1/wishlist}]
### Retrieve the user's wishlist [GET]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        [{
          "id": 1, "title": "Product #1", "total", 25.49
        }, {
          "id": 2, "title": "Product #2", "total", 19.99
        }]
        
+ Response 200 (application/json)

        { "id": 1, ... }
        

### Update a wishlist [PUT]
+ Request
    + Headers
    
            Token: eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Request (application/json)

        [{
          "id": 1, "title": "Product #1", "total", 25.49
        }, {
          "id": 2, "title": "Product #2", "total", 19.99
        }]
        
+ Response 200 (application/json)

        { "success": 1 }
        
### Create a new wishlist [POST]
+ Request (application/json)

        { "title": "Bundle #1 " }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23 }

        
# Group Orders
Order related resources of the reseller API
### Retrieve the user's current order [GET]
