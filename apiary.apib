FORMAT: 1A
HOST: http://www.google.com

# ASAP Reseller API
The ASAP Reseller API is a *registrar platform* offering for ASAP reseller website and services. 

# Group Authorization
General authorization handling

## User Token Authentication [/v1/token]
### Request new JWT token [GET]
+ Response 200 (application/json)

        { 
        "success": 1,
        "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E"
        }

### Update JWT token to avoid expiration [PUT]
+ Request (application/json)

        { "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E" }

+ Response 200 (application/json)

        { 
        "success": 1
        }

## User Login [/v1/login]
### Returning user login [POST]
+ Request (application/json)

        { "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E", "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

## User Logout [/v1/logout]
### Returning user logout [POST]
+ Request (application/json)

        { "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E" }
        
+ Response 200 (application/json)

        { "success": 1 }

# Group Products
Product related resources of the **ASAP API**

## Product List [/v1/products]
### List all products [GET]
+ Request

        { "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E" }

+ Response 200 (application/json)

        [{
          "id": 1, "name": "TLD", ...
        }, {
          "id": 2, "name": "goMobi", ...
        }]

## Offers List [/v1/offers]
### List product offers [GET]
+ Request

        { "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E" }
        
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Bundle #1", ...
        }, {
          "id": 2, "title": "Bundle #2", ...
        }]

# Group Customers
Customer related resources of the **ASAP API**

## Customers [/customers{?token}{?id}{?email}]
Creating and managing customer objects

### Retrieve a customer [GET]
+ Parameters
    + token (required, string) ... JWT authentication token.
    + id (optional, int) ... ID of the required customer.
    + email (optional, string) ... Email address of the required customer.

+ Response 200 (application/json)

        { "id": 1, ... }

### Create a new customer [POST]
+ Request (application/json)

        { "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

### Update customer record [PUT]
+ Request (application/json)

        { "email": "bob@example.com", ... }
        
+ Response 200 (application/json)

        { "success": 1 }


# Group Domains
Domain related resources of the **ASAP API**

## Search [/domain/search/{query}]
Perform a domain name search, ("domain spinning")

+ Parameters
    + query (required, string, `myshop.info`) ... String `query` of the base name to spin domains for. 

### Retrieve list of suggestions [GET]
+ Response 200 (application/json)

        { ... }

## Domain info [/domain/{fqdn}]
Retrieve and manage domain details using FQDN

+ Parameters
    + fqdn (required, string, `myshop.info`) ... String `fqdn` of the fully qualified domain name.

### Retrieve domain info, contacts, DNS records, nameservers [GET]
+ Response 200 (application/json)

        { "success": 1 }

### Update domain record [PUT]
+ Request (application/json)

        { "fqdn": "myshop.info", ... }
        
+ Response 200 (application/json)

        { "success": 1 }

# Group TLDs
TLD related resources of the **ASAP API**

## TLD List [/tlds]
### List all available TLDs [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "tld": "organic", ...
        }, {
          "id": 2, "tld": "info", ...
        }]



# Group Users
User related resources of the **ASAP API**

## User [/users]
Creating and managing user objects

### Retrieve a user [GET]
+ Request (application/json)

        { "email": "bob@example.com" }
        
+ Response 200 (application/json)

        { "id": 1, ... }
            
### Create a new user [POST]
+ Request (application/json)

        { "email": "bob@example.com", "password": "secret1" }
        
+ Response 200 (application/json)

        { "success": 1, "id": 23, ... }

### Update user record [PUT]
+ Request (application/json)

        { "email": "bob@example.com", ... }
        
+ Response 200 (application/json)

        { "success": 1 }


