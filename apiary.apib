FORMAT: 1A
HOST: https://api.internet.com/

# ASAP Reseller API
The ASAP Reseller API is a *platform* offering from Afilias. This document is a living document, a work in progress. 

# Group Token
General token authentication and handling.

## Token Generation [/v1/auth/token]

### Request new web token [POST]
Request a new Json Web Token (JWT) either as a guest user or when logging in. 

+ Request

  + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
  
  + Body 
  
            { "resellerKey": "dfservev35gegsdfsdfbgbr", "email": "bob@example.com", "password": "secret1" }
        
+ Response 201 (application/json)

        {  
                "data": {
                        "token": "eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E", 
                        "id": "u_4o3irjasofij" 
                }
        }
        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Login failed"
                }]
        }
        

### Force JWT token expiration [DELETE]
Logout forcing the user's JWT to expire and be revoked from usage. 

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204
        
## Token Refresh [/v1/auth/token/refresh]

### Update JWT session to avoid expiration [POST]
Request a new web token which has a new expiry further into the future.

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 201 (application/json)

        {  
                "data": {
                        "token": "abJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd44", 
                        "id": "u_4o3irjasofij"
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

# Group Users

## Users [/v1/users]

### Create a new user [POST]
Creating a new user will map the guest user token currently in user to the new user. 

+ Request


  + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
  
    + Body
    
            { "resellerId": "r_35gegsdfsr", "email": "bob@example.com", "password": "secret1", "firstName": "Bob", "lastName": "Smith" }
        
+ Response 201 (application/json)

        {  
                "data": {
                        "token": "ascabGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbajsdfhIZCrayNoVD47DEuFl1Qveqd2E", 
                        "id": "u_4o3irjasofij"
                }
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Email address already in use"
                }]
        }
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

### List all users [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 201 (application/json)

        {  
                "data": [{
                          "id": "u_145f4h2b", "firstName": "Alice", "lastName": "Wonderland", "email": "alice@madhatter.com"
                }, {
                          "id": "u_94gh4627", "firstName": "Bob", "lastName": "Blob", "email": "bob@example.com"
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

## Users [/v1/users/guest]
### Create a guest user [POST]
Creating a new user will map the guest user token currently in user to the new user. 

+ Request

    + Body
    
            { "resellerId": "r_35gegsdfsr" }
        
+ Response 201 (application/json)

        {  
                "data": {
                        "token": "ascabGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbajsdfhIZCrayNoVD47DEuFl1Qveqd2E", 
                        "id": "u_4o3irjasofij"
                }
        }
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Invalid Reseller key"
                }]
        }
        
## User Management [/v1/users/{id}]

### Retrieve specific user [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": {
                        "id": "u_145f4h2b", "firstName": "Adam", "lastName", "Jones", "email": "ajones@yahoo.com", ... 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

### Update user record [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "firstName", "Sam", "lastName": "Spade", "email": "bob@example.com"}
        
+ Response 200

        "data": {
                        "token": "ascabGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbajsdfhIZCrayNoVD47DEuFl1Qveqd2E", 
                        "id": "u_4o3irjasofij"
                }

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 304 (application/json) 

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

# Group Passwords
Password handling and reset.

## Forgotten Password Email Request [/v1/password/forgot]

### Request forgotten email password email [POST]

+ Request

    + Body
    
            { "email": "bob@example.com" }
        
+ Response 200

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

## Reset Forgotten Password [/v1/password/reset]

### Forgotten password verified change request [PUT]

+ Request
    
    + Body
    
            { "verificationKey": "t5fgftehved24tege", "password": "secret2" }
        
+ Response 200

        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Invalid Verification key"
                }]
        }

# Group Verification
New user verification of the **ASAP API**

## Verify New User [/v1/verification]

### Complete new user creation by verifying email address [POST]
Verificaion key is sent to new users as part of a web link. Ths key is sent to the API to verify the new user's email address. 

+ Request

    + Body
    
            { "verificationKey": "he4!!?#5w3getgwet%^Â£TG121DFG", "email": "bob@example.com", "password": "secret1"}

+ Response 200 (application/json)


+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Invalid Verification key"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Account already active"
                }]
        }
+ Response 400 (application/json) 

        {
                "errors": [{  
                        "code": 400,
                        "message": "Invalid Credential"
                }]
        }
        
## Resend Verification Link [/v1/verification/resend]

### Request to resend activation email with verification link [POST]
Generate a new email verification key and send an email containing it.

+ Request

    + Body
    
            { "email": "bob@example.com" }

+ Response 200

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Invalid Email"
                }]
        }

# Group Resellers
Reseller related resources of the **ASAP API**

## Create Reseller [/v1/resellers]

### Create a new reseller [POST]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            { "name": "Web.com", ... }

+ Response 201 (application/json)

        {  
                "data": {
                        "id": "r_th4y4dgfehth" 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

### Retrieve reseller records [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "r_zxfveberbdfv", "name": "Web.com", ...
                }, { 
                        "id": "r_bcxbthrdfggs", "name":, "1&1", ...
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

## Specific reseller [/v1/resellers/{reseller_id}]

### Retrieve reseller record [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "id": "r_zxfvebererfdfbdfv", "name": "Web.com", ...
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Reseller not found"
                }]
        }

### Update reseller record [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "name": "2&2", ... }
        
+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Reseller not found"
                }]
        }

## List sub-resellers [/v1/resellers/{reseller_id}/sub-resellers]

### List all direct sub-resellers [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "r_dfb3gwfsdfefw", "name": "Web.com", ...
                }, {
                        "id": "r_awrfedbe43tbe", "name": "1&1", ...
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

# Group Products

Product related resources of the **ASAP API**

## Product List [/v1/products]

### List all products [GET]
Retrieve global product list.

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                          "id": "p_asfar34t4f2f", "name": "TLD", "description": ".info", "category": "business", "price": "9.99"
                }, {
                          "id": "p_fgffr3134ddb", "name": "TLD", "description": ".com", "category": "business",  "price": "9.99"
                }, {
                          "id": "p_abbar34t4ffn", "name": "TLD", "description": ".organic", "category": "commercial",  "price": "19.99"
                }, {
                          "id": "p_q35a034t4f4m", "name": "TLD", "description": ".io", "category": "personal",  "price": "49.99"
                }, {
                          "id": "p_zsfau344h62b", "name": "TLD", "description": ".mobi", "category": "business",  "price": "19.99"
                }, {
                          "id": "p_adtrgt55353q", "name": "goMobi", "description": "Website builder package", "category": "", "price": "20.00"
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

## Retrieve Specific Product [/v1/products/{product_id}]

### Get a specific product [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": {
                          "id": "p_asfar34t4f2f", "name": "TLD", ...
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Product not found"
                }]
        }

### Update a specific product [PUT]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
    + Body

            { "name": "TLD", ... } 

+ Response 200 (application/json)

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Product not found"
                }]
        }
        
# Group Reseller Products
Manage reseller configured products

## List resellers products [/v1/resellers/{reseller_id}/products]

### List all reseller products [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                          "id": "p_asfar34t4f2f", "name": "TLD", "description": ".info", "category": "business", "price": "9.99"
                }, {
                          "id": "p_fgffr3134ddb", "name": "TLD", "description": ".com", "category": "business",  "price": "9.99"
                }, {
                          "id": "p_abbar34t4ffn", "name": "TLD", "description": ".organic", "category": "commercial",  "price": "19.99"
                }, {
                          "id": "p_q35a034t4f4m", "name": "TLD", "description": ".io", "category": "personal",  "price": "49.99"
                }, {
                          "id": "p_zsfau344h62b", "name": "TLD", "description": ".mobi", "category": "business",  "price": "19.99"
                }, {
                          "id": "p_adtrgt55353q", "name": "goMobi", "description": "Website builder package", "category": "", "price": "20.00"
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

## Manage resellers products [/v1/resellers/{reseller_id}/products/{product_id}]

### Update reseller product [PUT]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
    + Body

            { "id": "p_asdf3fcv", "name": "goMobi", ... }

+ Response 200 (application/json)

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Product not found"
                }]
        }

# Group Bundles

## Bundles List [/v1/products/bundles]

### List all bundles [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                          "id": "b_asffreb4432", "title": "Bundle #1", ...
                }, {
                          "id": "b_a34t3gb2668", "title": "Bundle #2", ...
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

### Create new bundle [POST]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "title": "The Bundle", ... }

+ Response 201 (application/json)

        {  
                "data": {
                        "id": "b_ryrh45y4tth" 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

## Update Bundle [/v1/products/bundles/{bundle_id}]

### Update an existing bundle [PUT]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "title": "The Bundle", ... }
            
+ Response 200 (application/json)

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Bundle not found"
                }]
        }
        
# Group Reseller Bundles
Manage reseller configured bundles

## List resellers bundles [/v1/resellers/{reseller_id}/bundles]

### List all reseller bundles [GET]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "b_wfsdfefw", "name": "Startup Bunble", ...
                }, {
                        "id": "b_dbe43tbe", "name": "Mega Bundle", ...
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

## Manage resellers bundles [/v1/resellers/{reseller_id}/bundles/{bundle_id}]

### Update reseller bundles [PUT]

+ Request
    + Headers

            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
    + Body

            { "id": "b_asdf3fcv", "name": "Mini Bundle", ... }

+ Response 200 (application/json)

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Bundle not found"
                }]
        }

# Group Cart

## Manage Cart [/v1/cart/{user_id}/items]

### Add to user's cart [POST]
Add a line item to the user's persistent cart.

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "p_asdffegdf", "value": "domainname.shop", "quantity": 1 }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }
    
### Retrieve a user's cart [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "i_45g3rsdfsdfsq", "packageId": "p_dfg34gwedaf", "value": "gomobi.mobi", "quantity": 5, "price": "49.99"
                }, {
                        "id": "i_asv5t3ggsdwfd", "packageId": "p_sf45grtbdfb", "value": "wholefoods.organic", "quantity": 1, "price": "9.99"
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

## Manage Cart Items [/v1/cart/{user_id}/items/{item_id}]

### Update item in user's cart [PUT]
Update the quanity value of a cart line item. 

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "quantity": 5 }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }
        
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Item Not Found"
                }]
        }
        
### Remove item from user's cart [DELETE]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E


+ Response 204

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Item Not Found"
                }]
        }
        
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }
        
## Reserving Domains [/v1/cart/{user_id}/items/{item_id}/reserve]

### Reserve a domain name [POST]
Register and reserve a domain name on the user's behalf, requires user to be logged in (not a guest user).

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

## Cart Checkout [/v1/cart/{user_id}/checkout]

### Submit order and get order id [POST]
Begin ordering process, generate an order id and confirm cart line items. 

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "orderId": "o_fvdfb3gervsf2es" 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

## Cart Complete [/v1/users/{user_id}/cart/complete]

### Send payment reference and finalize purchase [POST]
Transmit encrypted card details generated with Bluesnap front-end library to complete order process.

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "encryptedCardNumber": "xxxxxxxxxxxxxxx", "encryptedCardCcv": "xxx" }

+ Response 200 (application/json)

        {  
                "data": {
                        "paymentId": "bluesnap_12345" 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

# Group Package

## UpSell Packages [/v1/package/{packageId}/upsells]

### Returns List of Packages [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200

        {  
                "data": [
                    { "id":"u_jsdf", name:"Package Name", description:"Package Description", price:2832 },
                    { "id":"u_jsdf", name:"Package Name", description:"Package Description", price:2832 }, ...]
        }
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Package not found"
                }]
        }
        
# Group Wishlist

## Wistlist Management [/v1/users/{user_id}/wishlist]

### Add to wishlist [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "id": "p_45g3rsdfsdfsq", "name": "goMobi", "value": "", ... }
            
+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

### Retrieve wishlist [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "i_45g3rsdfsdfsq", "name": "goMobi", "value": "", ...
                }, {
                        "id": "i_asv5t3ggsdwfd", "name": ".Organic Domain", "value": "wholefoods" ...
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

## Manage wishlist items [/v1/users/{user_id}/wishlist/{wish_id}]

### Update wishlist item [PUT]
Update quantity value of a wishlist line item.

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "quanity": 23 }
            
+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

### Delete wishlist item [DELETE]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
            
+ Response 204

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

# Group coupons

## Coupons [/v1/coupon/create]

### Create Coupon [POST]

+ Request

    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
   
    + Body
    
            {code:"NY2015", description:"Description" value:"20", type:"Percentage/Fixed Amount", packageId:"Ukclksadnf", expiry:"20/9/2015:20:00", singleUse:true}

+ Response 200 (application/json)
    
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Coupon Code Exists"
                }]
        }

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }


### Create Coupon [GET]

+ Request

    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
   

+ Response 200 (application/json)
            
        { code:"NY2015", description:"Description" value:"20", type:"Percentage/Fixed Amount", packageId:"Ukclksadnf", expiry:"20/9/2015:20:00", singleUse:true}

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Coupon Code Exists"
                }]
        }

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

# Group Orders

## List user's orders [/v1/users/{user_id}/orders]

### Retrieve all user orders [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": [{
                        "id": "o_45g3rsdfsdfsq", "created": "2014-01-16 12:04:33", "description":"product name", "quantity":5, "price":"5.2", "discount":"20" 
                }, {
                        "id": "o_asv5t3ggsdwfd", "created": "2014-02-27 10:30:18",  "description":"product name", "quantity":5, "price":"5.2", "discount":"20" 
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

+ Response 204 (application/json) 
        
## Retrieve specific order [/v1/users/{user_id}/orders/{order_id}]

### Retrieve a specific user order [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "id": "o_45g3rsdfsdfsq", "created": "2014-01-16 12:04:33",  "description":"product name", "quantity":5, "price":"5.2", "discount":"20" 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "User not found"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Order Item Not found"
                }]
        }

# Group Domains

## Check Availability [/v1/domains/{domain}/available]

### Check availability of specific domain [GET]

+ Response 200 (application/json)

        {  
                "data": {
                        "available": true, 
                        "price": "9.99"
                }
        }
        
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Bad Request"
                }]
        }

## Suggest - TLD Spin [/v1/domains/{query}/tld-spin]

### Retrieve list of domain suggestions [GET]
Fetch list of domain suggestions with various TLD's.

+ Response 200 (application/json)

        {
            "data": [{
                    "domain": "myshop.info",
                    "category": "business",
                    "price": "12.99"
            }, {
                    "domain": "myshop.guru", 
                    "category": "personal", 
                    "price": "15.00"
            }, {
                    "domain": "myshop.red",
                    "category": "leisure",
                    "price": "9.99"
            }]
        }
        
## Suggest - Domain & TLD Spin [/v1/domains/{query}/domain-spin] 

### Retrieve list of domain suggestions [GET]
Fetch list of domain suggestions based on query root. 

+ Response 200 (application/json)

        {
            "data": [{
                    "domain": "myshop.info",
                    "category": "business",
                    "price": "12.99"
            }, {
                    "domain": "myshophome.info", 
                    "category": "personal", 
                    "price": "15.00"
            }, {
                    "domain": "myshopweb.organic",
                    "category": "leisure",
                    "price": "9.99"
            }]
        }
        
## Suggest - Domain spin with Landing TLD [/v1/domains/landing/{domain}] 

### Retrieve list of domain with landing TLD [GET]
Fetch list of domain suggestions based on query root. 

+ Response 200 (application/json)

        {
            "data": [{
                    "domain": "myshop.organice",
                    "price": "12.99"
            }, {
                    "domain": "myshophome.organic",
                    "price": "15.00"
            }, {
                    "domain": "myshopweb.organic",
                    "price": "9.99"
            }]
        }
       
## Suggest - Domain spin with Sunrise TLD [/v1/domains/sunrise/{domain}] 

### Retrieve list of domain with landing TLD [GET]
Fetch list of domain suggestions based on query root. 

+ Response 200 (application/json)

        {
            "data": [{
                    "domain": "myshop.organice",
                    "price": "12.99"
            }, {
                    "domain": "myshophome.organic",
                    "price": "15.00"
            }, {
                    "domain": "myshopweb.organic",
                    "price": "9.99"
            }]
        }
        
## List TLD's [/v1/domain/tld-category]

### Retrieve list of TLD and respective Category [GET]
List includes supported TLD's and respective Category.

+ Response 200 (application/json)

        {  
                "data": {
                    "tlds" : [{id:"4o3irjasofij", name:"info", catId:"1o3irjasofij", catName:"Business"}, {id:"3o3irjasofij", name:"club"}, {id:63o3irjasofij", name:"org", catId:"2o3irjasofij", catName:"Entertainment"},...]
                }
        }

## List TLD's [/v1/domain/trademark/{lookupKey}]

### Get a trademark check response for the given lookup key [GET]
Returns claim id and the claim Dates.

+ Response 200 (application/json)

        {  
                "data": {
                     {"notBefore":"2014-07-17T12:00:00.0Z","id":"e9b9a8980000000000000075745","notAfter":"2014-07-19T12:00:00.0Z"}
                }
        }


## Domain Email Forwarding [/v1/domain/{domain}/email]

### Domain Email Forwarding [GET]

+ Response 200 (application/json)

        {  
                "data": {
                     {"from":"test@test.com","to":"test1@test.com"}
                     {"from":"test2@test.com","to":"test21@test.com"}
                }
        }
        



### Domain Email Forwarding [POST]


+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
    + Body
            
                {
                     {"from":"test@test.com","to":"test1@test.com"}
                     {"from":"test2@test.com","to":"test21@test.com"}
                }

+ Response 200 (application/json)

        {  
                "data": {
                     {"message": "Email forwarded succesfully"}
                     }
        }
        



## Domain Nameservers [/v1/domains/{domain}/child-nameservers]

### Add child name servers for the supplied domain [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "cnameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...]
            }
            
+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }



## List User Domains [/v1/users/{user_id}/domains]

### Retrieve list of user's domains [GET]
List includes active domains, researved domains, transfer requests and pre-order domains.

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
        
+ Response 200 (application/json)

        {  
                "data": {
                    "domains" : [ "myshop.info", "myshophome.info", "myshopweb.organic" ]
                }
        }

## Domain info [/v1/users/{user_id}/domains/{domain}]

### Retrieve full domain info, contacts, DNS records, nameservers, domain lock, etc [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "domain": "myshop.info", ... 
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }
        
### Update full domain info, contacts, DNS records, nameservers, domain lock, etc [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            "data": { "domain": "myshop.info", ... }
        
+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }
        

## Auto renew a domain [/v1/domains/{domain}/autorenew]

### Auto Renew domain [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "renew": true }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
        
   
### Auto Renew domain [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E


+ Response 200

                "data": { "renew": true }

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
        

## Enable or Disable whoisprivacy [/v1/domains/{domain}/whoisprivacy]

### update whoisprivacy [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

             { "whoisprivacy": true }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
 

 
### update whoisprivacy [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E


+ Response 200

                "data": { "whoisprivacy": true }

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
        

## Renew a domain [/v1/domains/{domain}/renew]

### Renew a domain [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

             { "years": 1 }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
 
 
 
## Get EPP Code [/v1/domains/{domain}/epp]

### Get the eppAuthCode [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E


+ Response 200
            
                "data": {
                        "eppCode": "asdasd"
                }

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
        
  
## Move a domain [/v1/domains/{domain}/move]

### Move a domain [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

  + Body

            { "email": "test@test.com" }

+ Response 200
            

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }
 
       
        
## Domain lock [/v1/domains/{domain}/lock]

### Set current status of domain lock [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "lock": true }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 400,
                        "message": "Domain not found"
                }]
        }

## Domain Auto Renew [/v1/domains/{domain}/auto-renew]

### Set current status of auto renew [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            { "autoRenew": true }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

## Domain Whois Privacy [/v1/domains/{domain}/whois-privacy]

### Set current status of whois privacy [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

   + Body

            { "whoisPrivacy": true }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

## Domain Nameservers [/v1/domains/{domain}/nameservers]

### Update domain nameserver records [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "nameservers": ["ns1.myseller.info", "ns2.myreseller.info", ...]
            }
            
+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 400 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

## Domain Contacts Management [/v1/domains/{domain}/contacts/{id}]

### Update domain contact [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            {"registrantKey": "DKAJSHDSD", "administrativeKey": "DKAJSHDSD", "billingContactKey": "DKAJSHDSD", "technicalContactKey": "DKAJSHDSD"}

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Contact not found"
                }]
        }
        

## Domain Contacts Management [/v1/domains/{domain}/contacts]

### Add domain contact [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body
    
            {
                "type": "registrant",
                "firstName": "Jonathan",
                "lastName": "Doe",
                "organization": "Acme Inc",
                "email": "",
                "address1": "",
                "address2": "",
                "city": "",
                "state": "",
                "postalCode": "",
                "country": "",
                "phone1Type": "",
                "phone1Country_code": "",
                "phone1Number": "",
                "phone1Extension": "",
                "phone2Type": "",
                "phone2Country_code": "",
                "phone2Number": "",
                "phone2Extension": "",
                "fax1Type": "",
                "fax1CountryCode": "",
                "fax1Number": ""
            }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }


## Delete Domain [/v1/domains/{domain}]

### Delete domain contact [DELETE]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E
   

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }


# Group URL Forwarding

## Manage domain fowarding rules [/v1/domains/{domain}/forwarding]

### Create forwarding rule record [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "pointing": "http://www.myothershop.info",
                "type": "MASKED",
                "pageTitle": "Forwarding Page"
            }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }
    
### Retrieve list of URL forwarding rules [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "rules": [
                                {
                                        "id": "ru_34effrth45y4",
                                        "pointing": "http://www.myothershop.info",
                                        "type": "MASKED",
                                        "pageTitle": "Forwarding Page"
                                }
                        ]
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

## Manage forwarding rule record [/v1/domains/{domain}/forwarding/{id}]

### Update forwarding rule record [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "id": "ru_asdfer345345",
                "pointing": "http://www.myothershop.info",
                "type": "MASKED",
                "pageTitle": "Forwarding Page"
            }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

### Delete forwarding rule record [DELETE]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 204

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

# Group DNS

## List [/v1/domains/{domain}/dns]

### Create new DNS record [POST]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {[
                "type": "MX",
                "content": "mx1.myshop.info",
                "ttl": 300,
                "priority": 10
            ]}

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

### Retrieve list of DNS records [GET]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "records": [
                                {
                                        "id": "d_fg3qg4535y",
                                        "type": "MX",
                                        "content": "mx1.myshop.info",
                                        "ttl": 300,
                                        "priority": 10
                                },
                                {
                                        "id": "d_3y4thr4t3h",
                                        "type": "MX",
                                        "content": "mx2.myshop.info",
                                        "ttl": 300,
                                        "priority": 20
                                }
                        ]
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

## Manage DNS record [/v1/domains/{domain}/dns/{id}]
    
### Update DNS record [PUT]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

    + Body

            {
                "type": "MX",
                "content": "mx1.myshop.info",
                "ttl": 300,
                "priority": 10
            }

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }

### Delete DNS record [DELETE]

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200

+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
        
+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }]
        }
        
# Group Whois

## List [/v1/whois/{domain}]

### Retrieve whois info [GET]
Execute a whois lookup on the queried domain and return result.

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
                "data": {
                        "record": "Domain Name:AFILIAS.INFO\nDomain ID: D217-LRMS\nCreation Date: 2001-07-25T14:11:20Z\nUpdated Date: 2014-06-30T14:22:47Z\nRegistry Expiry Date: 2021-07-25T14:11:20Z\nSponsoring Registrar:Afilias Ltd. (R145-LRMS)\nSponsoring Registrar IANA ID: 700023\nWHOIS Server: \nReferral URL: \nDomain Status: ok\nRegistrant ID:C270-LRMS\nRegistrant Name:Afilias Limited\nRegistrant Organization:Afilias Ltd.\nRegistrant Street: 2 La Touche House\nRegistrant Street: IFSC\nRegistrant City:Dublin\nRegistrant State/Province:\nRegistrant Postal Code:1\nRegistrant Country:IE\nRegistrant Phone:+353.18541100\nRegistrant Phone Ext: \nRegistrant Fax: +1.2157065701\nRegistrant Fax Ext: \nRegistrant Email:support@afilias.info\nAdmin ID:C270-LRMS\nAdmin Name:Afilias Limited\nAdmin Organization:Afilias Ltd.\nAdmin Street: 2 La Touche House\nAdmin Street: IFSC\nAdmin City:Dublin\nAdmin State/Province:\nAdmin Postal Code:1\nAdmin Country:IE\nAdmin Phone:+353.18541100\nAdmin Phone Ext: \nAdmin Fax: +1.2157065701\nAdmin Fax Ext: \nAdmin Email:support@afilias.info\nBilling ID:C270-LRMS\nBilling Name:Afilias Limited\nBilling Organization:Afilias Ltd.\nBilling Street: 2 La Touche House\nBilling Street: IFSC\nBilling City:Dublin\nBilling State/Province:\nBilling Postal Code:1\nBilling Country:IE\nBilling Phone:+353.18541100\nBilling Phone Ext: \nBilling Fax: +1.2157065701\nBilling Fax Ext: \nBilling Email:support@afilias.info\nTech ID:C270-LRMS\nTech Name:Afilias Limited\nTech Organization:Afilias Ltd.\nTech Street: 2 La Touche House\nTech Street: IFSC\nTech City:Dublin\nTech State/Province:\nTech Postal Code:1\nTech Country:IE\nTech Phone:+353.18541100\nTech Phone Ext: \nTech Fax: +1.2157065701\nTech Fax Ext: \nTech Email:support@afilias.info\nName Server:A0.DIG.AFILIAS-NST.INFO\nName Server:B0.DIG.AFILIAS-NST.INFO\nName Server:C0.DIG.AFILIAS-NST.INFO\nName Server:D0.DIG.AFILIAS-NST.INFO\nDNSSEC:signedDelegation\nDS Created 1:2013-12-09T21:29:30Z\nDS Key Tag 1:32709\nAlgorithm 1:5\nDigest Type 1:2\nDigest 1:4B5D67729CE8180BBF93D0ACD78053262F68BCD402D0C947E54E74A553E5994A\nDS Maximum Signature Life 1:1814400 seconds\nDS Created 2:2013-12-09T21:29:30Z\nDS Key Tag 2:32709\nAlgorithm 2:5\nDigest Type 2:1\nDigest 2:BF4903176E0BE0664B511BFEAA4651A5CACCC733\nDS Maximum Signature Life 2:1814400 seconds"
                }
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }

+ Response 404 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Domain not found"
                }
        }

# Group UI

## List Menu for User Role [/v1/ui/menu/]

### Retrieve whois info [GET]
Execute a whois lookup on the queried domain and return result.

+ Request
    + Headers
    
            Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtp.zpsEabFfYMGkbIZCrayNoVD47DEuFl1Qveqd2E

+ Response 200 (application/json)

        {  
            "data":[{
                          "id": "u_145f4h2b", name:"Home Page", action:"controller/abc"
                }, {
                          "id": "u_94gh4627", name:"Contact", action:"controller/contact/abc",menu:[{name:"Edit Contact", action:"controller/contact/edit"}]
                }]
        }
        
+ Response 401 (application/json) 

        {  
                "errors": [{  
                        "code": 1234,
                        "message": "Token unknown or already expired"
                }]
        }
